{{- range .Values.clusterGroup.subscriptions }}
{{- $subs := . }}
{{- if $subs.name }}
{{- $installPlanValue := .installPlanApproval }}

{{- if $subs.namespaces }}
{{- if not $subs.disabled }}
{{- range .namespaces }}
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: {{ $subs.name }}
  namespace: {{ . }}
  {{- include "clustergroup.annotations" $subs.annotations | nindent 2 }}
spec:
  name: {{ $subs.name }}
  source: {{ default "redhat-operators" $subs.source }}
  sourceNamespace: {{ default "openshift-marketplace" $subs.sourceNamespace }}
  {{- if $subs.channel }}
  channel: {{ $subs.channel }}
  {{- end }} {{/* if $subs.channel */}}
  installPlanApproval: {{ coalesce $installPlanValue $.Values.global.options.installPlanApproval }}
  {{- if $subs.config }}
  config: {{ toYaml $subs.config | nindent 4 }}
  {{- end }}{{/* if $subs.config */}}
  {{- if $.Values.global.options.useCSV }}
  startingCSV: {{ $subs.csv }}
  {{- else if $subs.csv }}
  startingCSV: {{ $subs.csv }}
  {{- end }} {{/* if $.Values.global.options.useCSV */}}
---
{{- end }}{{/* range .namespaces */}}
{{- end }}{{/* if not $subs.disabled */}}
{{- else if not $subs.disabled }}{{/* if $subs.namespaces */}}
{{- if or $subs.channels $subs.version $subs.upgradeConstraintPolicy $subs.serviceAccountName }}
apiVersion: olm.operatorframework.io/v1
kind: ClusterExtension
metadata:
  name: {{ $subs.name }}
  {{- include "clustergroup.annotations" $subs.annotations | nindent 2 }}
spec:
  namespace: {{ default "openshift-operators" $subs.namespace }}
  {{- if $subs.serviceAccountName }}
  serviceAccount:
    name: {{ $subs.serviceAccountName }}
  {{- end }}
  source:
    sourceType: Catalog
    catalog:
      packageName: {{ $subs.name }}
      {{- if $subs.channels }}
      channels: {{ $subs.channels | toJson }}
      {{- end }}
      {{- if $subs.version }}
      version: {{ $subs.version | quote }}
      {{- end }}
      upgradeConstraintPolicy: {{ coalesce $subs.upgradeConstraintPolicy "CatalogProvided" }}
---
{{- else }}
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: {{ $subs.name }}
  namespace: {{ default "openshift-operators" $subs.namespace }}
  {{- include "clustergroup.annotations" $subs.annotations | nindent 2 }}
spec:
  name: {{ $subs.name }}
  source: {{ default "redhat-operators" $subs.source }}
  sourceNamespace: {{ default "openshift-marketplace" $subs.sourceNamespace }}
  {{- if $subs.channel }}
  channel: {{ $subs.channel }}
  {{- end }}
  installPlanApproval: {{ coalesce  $installPlanValue $.Values.global.options.installPlanApproval }}
  {{- if $subs.config }}
  config: {{ toYaml $subs.config | nindent 4 }}
  {{- end }}{{/* if $subs.config */}}
  {{- if $.Values.global.options.useCSV }}
  startingCSV: {{ $subs.csv }}
  {{- else if $subs.csv }}
  startingCSV: {{ $subs.csv }}
  {{- end }}{{/* if $.Values.global.options.useCSV */}}
---
{{- end }}{{/* if or ... ClusterExtension condition */}}
{{- end }}{{/* if $subs.namespaces */}}
{{- if and $subs.sequenceJob (not $subs.sequenceJob.disabled) }}{{/* if $subs.sequenceJob */}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $subs.name }}-sequencejob
  annotations:
    argocd.argoproj.io/hook: {{ coalesce $subs.sequenceJob.hookType "Sync" }}
    argocd.argoproj.io/sync-wave: {{ coalesce $subs.sequenceJob.syncWave (get $subs.annotations "argocd.argoproj.io/sync-wave") | quote }}
spec:
  parallelism: 1
  completions: 1
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: {{ $subs.name }}-sequencejob
          image: {{ coalesce $subs.sequenceJob.image "quay.io/hybridcloudpatterns/imperative-container:v1" }}
          {{- if $subs.sequenceJob.command }}
          command: {{ $subs.sequenceJob.command | toJson }}
          {{- else }}
          command:
            - /bin/bash
            - -c
            - |
              while [ 1 ];
              do
                oc get {{ $subs.sequenceJob.resourceType }} {{ $subs.sequenceJob.resourceName }}  {{- if $subs.sequenceJob.resourceNamespace }} -n {{ $subs.sequenceJob.resourceNamespace }}{{- end }} && break
                echo "{{ $subs.sequenceJob.resourceType }} {{ $subs.sequenceJob.resourceName }} {{- if $subs.sequenceJob.resourceNamespace }} in {{ $subs.sequenceJob.resourceNamespace}} {{- end }} not found, waiting..."
                sleep 5
              done
              echo "{{ $subs.sequenceJob.resourceType }} {{ $subs.sequenceJob.resourceName }} {{- if $subs.sequenceJob.resourceNamespace }} in {{ $subs.sequenceJob.resourceNamespace}} {{- end }} found, exiting..."
              exit 0
          {{- end }}
---
{{- end }}{{/* if $subs.sequenceJob */}}
{{- end }}{{/* if $subs.name */}}
{{- end }}{{/* range .Values.clusterGroup.subscriptions */}}
